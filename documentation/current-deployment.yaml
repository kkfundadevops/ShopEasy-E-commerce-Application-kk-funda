apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "9"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"ecommerce","tier":"backend"},"name":"ecommerce-backend","namespace":"shopeasy-dev"},"spec":{"replicas":2,"selector":{"matchLabels":{"app":"ecommerce","tier":"backend"}},"template":{"metadata":{"labels":{"app":"ecommerce","tier":"backend"}},"spec":{"containers":[{"env":[{"name":"DB_USER","valueFrom":{"secretKeyRef":{"key":"username","name":"db-credentials"}}},{"name":"DB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"password","name":"db-credentials"}}}],"envFrom":[{"configMapRef":{"name":"backend-config"}}],"image":"017820683847.dkr.ecr.us-east-1.amazonaws.com/ecommerce-app-backend:latest","imagePullPolicy":"Always","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/api/health","port":"http"},"initialDelaySeconds":90,"periodSeconds":20,"timeoutSeconds":5},"name":"backend","ports":[{"containerPort":5000,"name":"http"}],"readinessProbe":{"failureThreshold":6,"httpGet":{"path":"/api/ready","port":"http"},"initialDelaySeconds":60,"periodSeconds":15,"successThreshold":1,"timeoutSeconds":10},"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"200m","memory":"256Mi"}},"startupProbe":{"failureThreshold":30,"httpGet":{"path":"/api/health","port":"http"},"initialDelaySeconds":45,"periodSeconds":10,"timeoutSeconds":10},"volumeMounts":[{"mountPath":"/tmp/flask_sessions","name":"flask-sessions"}]}],"serviceAccountName":"ecommerce-backend-sa","volumes":[{"emptyDir":{},"name":"flask-sessions"}]}}}}
  creationTimestamp: "2025-02-09T17:46:16Z"
  generation: 9
  labels:
    app: ecommerce
    tier: backend
  name: ecommerce-backend
  namespace: shopeasy-dev
  resourceVersion: "4951247"
  uid: 20e6dfb3-3745-4ce4-bf1f-d42876d2b2e8
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ecommerce
      tier: backend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-02-09T20:01:09Z"
      creationTimestamp: null
      labels:
        app: ecommerce
        tier: backend
    spec:
      containers:
      - env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: db-credentials
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: db-credentials
        envFrom:
        - configMapRef:
            name: backend-config
        image: 017820683847.dkr.ecr.us-east-1.amazonaws.com/ecommerce-app-backend:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 90
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 5
        name: backend
        ports:
        - containerPort: 5000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /api/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp/flask_sessions
          name: flask-sessions
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: ecommerce-backend-sa
      serviceAccountName: ecommerce-backend-sa
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: flask-sessions
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2025-02-09T17:47:17Z"
    lastUpdateTime: "2025-02-09T17:47:17Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-02-09T17:46:16Z"
    lastUpdateTime: "2025-02-09T20:03:40Z"
    message: ReplicaSet "ecommerce-backend-5b595789c8" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 9
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
